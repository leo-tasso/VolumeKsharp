name: Generate UML

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  generate-uml:
    name: 'Generate UML'
    runs-on: ubuntu-latest
    env:
      CODE_PATH: "./VolumeKsharp/"
      UML_OUTPUT_PATH: "./UML/"
      UMP_GENERATION_PARAMETERS: -public -createAssociation -allInOne

    steps:
      - uses: actions/checkout@v2

      - name: Remove old diagrams 
        run: rm -r ${{ env.UML_OUTPUT_PATH }} || true

      - name: Check if there is code
        run: |
          [ -d ${{ env.CODE_PATH }} ] && echo "::set-output name=CODE_EXISTS::true" || true
        id: check_for_code
        
      - uses: actions/setup-dotnet@v1
        if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        with:
          dotnet-version: 6.0.x

      - if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        run: dotnet tool install --global PlantUmlClassDiagramGenerator --version 1.3.4
      - if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        run: dotnet tool restore

      - name: Create a folder for diagrams
        if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        run: mkdir ${{ env.UML_OUTPUT_PATH }}

      - name: Generate PlantUML files
        if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        run: puml-gen ${{ env.CODE_PATH }} ${{ env.UML_OUTPUT_PATH }} -dir ${{ env.UMP_GENERATION_PARAMETERS }}

      - name: Get File names
        if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        run: |
          echo "::set-output name=UML_FILES::$(find ${{ env.UML_OUTPUT_PATH }} -name "*.puml" | tr '\n' ' ')"
        id: get_file_names

      - name: Generate SVG Diagrams
        if: ${{ steps.check_for_code.outputs.CODE_EXISTS == 'true' }}
        uses: cloudbees/plantuml-github-action@master
        with:
          args: -v -tsvg ${{ steps.get_file_names.outputs.UML_FILES }}

      - name: Commit UML diagrams
        run: |
          git config --local user.email "tassinari.leonardo.2000@gmail.com"
          git config --local user.name "Leonardo Tassinari"
          git diff --exit-code > /dev/null 2>&1  # Suppress output and capture exit code
          DIFF_EXIT_CODE=$?
          if [ $DIFF_EXIT_CODE -eq 1 ]; then
            git add .
            git commit -m "Generate UML (${{ github.workflow }})"
            git push origin HEAD:master
          else
            echo "No changes to commit."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
